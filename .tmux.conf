set -s escape-time 0
setw -g mouse on
# key_bind
# mac側のtmuxと被らないように変える
set -g prefix C-b

# 現状だとマウスで範囲コピーしたい場合は以下の手順が必要。なんとかしたい。
# 1. (マウスで)任意の場所までスクロール
# 2. cmd + shift + c でalacrittyのコピーモードに入る
# 3. マウスで範囲選択
# 4. yでコピー
# 5. iでコピーモードを抜ける
unbind -T copy-mode-vi MouseDragEnd1Pane # マウスでコピーしたときにターミナルの末尾までカーソルが移動するのを防ぐ
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
# 矩形選択モードに入る。vで選択モードに入ってからc-vする必要があるので注意
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle
setw -g mode-keys vi

# 検索: prefix + [ + /
# nとshift+nで検索結果を移動できる

bind r command-prompt -I'#W' { rename-window -- '%%' }
bind d 'kill-pane'
bind e 'new-window' -c '#{pane_current_path}'
# bind q ''

# window左右移動
bind Left swap-window -t -1 \; previous-window
bind Right swap-window -t +1 \;  next-window

# pane 分割
bind s split-window -h -c '#{pane_current_path}'
bind v split-window -v -c '#{pane_current_path}'

# pane 移動
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind L last-window # 1つ前のウィンドウに移動
bind tab last-window # 1つ前のウィンドウに移動

# resize pane
bind -n S-left resize-pane -L 2
bind -n S-down resize-pane -D 2
bind -n S-up resize-pane -U 2
bind -n S-right resize-pane -R 2

# bind \  -E "$HOME/.tmux/bin/tmux-fzf-session"

# ポップアップボーダーを丸角に設定
# set -g popup-border-lines rounded
# prefix + C-tでpopupセッションを開く/閉じる
# bind C-t popup -xC -yC -w85% -h85% -E -d "#{pane_current_path}" '\
#   if [ popup = $(tmux display -p -F "#{session_name}") ]; then \
#     tmux detach-client ; \
#   else \
#     tmux attach -c $(tmux display -p -F "#{pane_current_path}") -t popup || tmux new -s popup; \
#   fi \
# '

# フォーカスが当たっていないペインの背景色を薄くする
setw -g window-active-style bg=colour234
setw -g window-style bg=colour240
# ↑を削除したい場合は↓をコメントインする
# setw -g window-active-style bg=default
# setw -g window-style bg=default

# 256色モードを有効にする
# set -g default-terminal 'screen-256color'
set -g default-terminal "alacritty"
set-option -ga terminal-overrides ',alacritty:RGB'

# undercurlの色をいい感じにするために必要
# ref: https://github.com/alacritty/alacritty/issues/7444#issuecomment-1862541391
# set-option -ga terminal-features ",alacritty:usstyle"
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# weztermで色をいい感じにするために必要
# set -ag terminal-overrides ",xterm-256color:RGB"
# set -ag terminal-features ",sync"

# set -g pane-border-bg colour0
# set -g pane-border-fg colour238
# set -g pane-active-border-bg colour0
# set -g pane-active-border-fg colour119
# set -g pane-border-bg default
# set -g pane-border-fg default
# set -g pane-active-border-bg default
# set -g pane-active-border-fg default

# ステータスライン
# 色はこれをみればわかる
# https://qiita.com/nojima/items/9bc576c922da3604a72b
# https://github.com/erikw/tmux-powerline のcolor_palette.sh

# set -g status off # ステータスラインを非表示に
set -g status on # ステータスラインを表示する
# set -g status-justify absolute-centre
set -g status-position bottom
set -g status-interval 1
# set -g status-bg colour234
set -g status-bg default

# 左端の`[10]`みたいな表示を消す
set -g status-left ""

setw -g window-status-current-format ' #[fg=colour202]#W#[fg=colour237] '
# setw -g window-status-fg colour244
# setw -g window-status-bg colour234
# setw -g window-status-fg default
# setw -g window-status-bg default
# setw -g window-status-attr none
set-window-option -g window-status-style fg=default,bg=default,default
setw -g window-status-format ' #[fg=colour237]#W#[fg=colour237] '

# ステータスライン右側の設定
# ステータスライン右側の最大の長さ
set-option -g status-right-length 120
set-option -g status-right "#[fg=colour202]%m/%d %H:%M:%S#[default]      "

set -g status-style fg=default,bg=default

# lazygitをtmuxのpopup windowで開く設定。デカいリポジトリだとneovim内でlazygitを開くと固まるときがあるのがあまりにも辛ければこれを使う
# ただしtoggletermでやってるようにpushした瞬間にbackgroundに送って次の作業に移行するとかはできないので注意
# bind -n C-q display-popup -E -xC -yC -w 100% -h 100% -d "#{pane_current_path}" lazygit

# インストールするプラグインとその設定一覧
# インストールしたいプラグインを記述して、 prefix + I でインストールできる(prefix + i じゃないよ)
set -g @plugin 'tmux-plugins/tpm'

set -g @plugin 'sainnhe/tmux-fzf'
# bind-key "C-t" run-shell -b "${HOME}/.tmux/plugins/tmux-fzf/scripts/window.sh switch"
bind-key "space" run-shell -b "${HOME}/.tmux/plugins/tmux-fzf/scripts/window.sh switch"
bind-key "enter" run-shell -b "${HOME}/.tmux/plugins/tmux-fzf/scripts/window.sh switch"

set -g @plugin 'tmux-plugins/tmux-resurrect'
# デフォルトだとprefix + Ctrl-rで復元されるがミスタイプで誤って実行されがちなので変更
unbind-key C-r
unbind-key R

set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'

# easy motionっぽく飛べる
set -g @plugin 'schasse/tmux-jump'
set -g @jump-key 'g'

set -g @plugin 'fcsonline/tmux-thumbs'
set -g @thumbs-key 'f'
# 1にしてしまうと、tmux-thumbsで文字列をコピーするたびに謎のempty windowが表示されるため0に設定している。
# ref: https://github.com/fcsonline/tmux-thumbs/issues/163
set -g @thumbs-osc52 0
set -g @thumbs-contrast 1
set -g @thumbs-command 'echo -n {} | pbcopy && tmux send-keys Enter'
set -g @thumbs-multi-command 'echo -n {}'
set -g @thumbs-unique enabled
set -g remain-on-exit off

run '~/.tmux/plugins/tpm/tpm'

bind R source-file ~/.tmux.conf
